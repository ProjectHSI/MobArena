// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mc.proto

// Protobuf Java Version: 3.25.0
package io.github.projecthsi.mobarena.protobuf;

/**
 * Protobuf enum {@code mob_arena.EntityType}
 */
public enum EntityType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>ALLAY = 0;</code>
   */
  ALLAY(0),
  /**
   * <code>AREA_EFFECT_CLOUD = 1;</code>
   */
  AREA_EFFECT_CLOUD(1),
  /**
   * <code>ARMOR_STAND = 2;</code>
   */
  ARMOR_STAND(2),
  /**
   * <code>ARROW = 3;</code>
   */
  ARROW(3),
  /**
   * <code>AXOLOTL = 4;</code>
   */
  AXOLOTL(4),
  /**
   * <code>BAT = 5;</code>
   */
  BAT(5),
  /**
   * <code>BEE = 6;</code>
   */
  BEE(6),
  /**
   * <code>BLAZE = 7;</code>
   */
  BLAZE(7),
  /**
   * <code>BLOCK_DISPLAY = 8;</code>
   */
  BLOCK_DISPLAY(8),
  /**
   * <code>BOAT = 9;</code>
   */
  BOAT(9),
  /**
   * <code>CAMEL = 10;</code>
   */
  CAMEL(10),
  /**
   * <code>CAT = 11;</code>
   */
  CAT(11),
  /**
   * <code>CAVE_SPIDER = 12;</code>
   */
  CAVE_SPIDER(12),
  /**
   * <code>CHEST_BOAT = 13;</code>
   */
  CHEST_BOAT(13),
  /**
   * <code>CHICKEN = 14;</code>
   */
  CHICKEN(14),
  /**
   * <code>COD = 15;</code>
   */
  COD(15),
  /**
   * <code>COW = 16;</code>
   */
  COW(16),
  /**
   * <code>CREEPER = 17;</code>
   */
  CREEPER(17),
  /**
   * <code>DOLPHIN = 18;</code>
   */
  DOLPHIN(18),
  /**
   * <code>DONKEY = 19;</code>
   */
  DONKEY(19),
  /**
   * <code>DRAGON_FIREBALL = 20;</code>
   */
  DRAGON_FIREBALL(20),
  /**
   * <code>DROPPED_ITEM = 21;</code>
   */
  DROPPED_ITEM(21),
  /**
   * <code>DROWNED = 22;</code>
   */
  DROWNED(22),
  /**
   * <code>EGG = 23;</code>
   */
  EGG(23),
  /**
   * <code>ELDER_GUARDIAN = 24;</code>
   */
  ELDER_GUARDIAN(24),
  /**
   * <code>ENDER_CRYSTAL = 25;</code>
   */
  ENDER_CRYSTAL(25),
  /**
   * <code>ENDER_DRAGON = 26;</code>
   */
  ENDER_DRAGON(26),
  /**
   * <code>ENDER_PEARL = 27;</code>
   */
  ENDER_PEARL(27),
  /**
   * <code>ENDER_SIGNAL = 28;</code>
   */
  ENDER_SIGNAL(28),
  /**
   * <code>ENDERMAN = 29;</code>
   */
  ENDERMAN(29),
  /**
   * <code>ENDERMITE = 30;</code>
   */
  ENDERMITE(30),
  /**
   * <code>EVOKER = 31;</code>
   */
  EVOKER(31),
  /**
   * <code>EVOKER_FANGS = 32;</code>
   */
  EVOKER_FANGS(32),
  /**
   * <code>EXPERIENCE_ORB = 33;</code>
   */
  EXPERIENCE_ORB(33),
  /**
   * <code>FALLING_BLOCK = 34;</code>
   */
  FALLING_BLOCK(34),
  /**
   * <code>FIREBALL = 35;</code>
   */
  FIREBALL(35),
  /**
   * <code>FIREWORK = 36;</code>
   */
  FIREWORK(36),
  /**
   * <code>FISHING_HOOK = 37;</code>
   */
  FISHING_HOOK(37),
  /**
   * <code>FOX = 38;</code>
   */
  FOX(38),
  /**
   * <code>FROG = 39;</code>
   */
  FROG(39),
  /**
   * <code>GHAST = 40;</code>
   */
  GHAST(40),
  /**
   * <code>GIANT = 41;</code>
   */
  GIANT(41),
  /**
   * <code>GLOW_ITEM_FRAME = 42;</code>
   */
  GLOW_ITEM_FRAME(42),
  /**
   * <code>GLOW_SQUID = 43;</code>
   */
  GLOW_SQUID(43),
  /**
   * <code>GOAT = 44;</code>
   */
  GOAT(44),
  /**
   * <code>GUARDIAN = 45;</code>
   */
  GUARDIAN(45),
  /**
   * <code>HOGLIN = 46;</code>
   */
  HOGLIN(46),
  /**
   * <code>HORSE = 47;</code>
   */
  HORSE(47),
  /**
   * <code>HUSK = 48;</code>
   */
  HUSK(48),
  /**
   * <code>ILLUSIONER = 49;</code>
   */
  ILLUSIONER(49),
  /**
   * <code>INTERACTION = 50;</code>
   */
  INTERACTION(50),
  /**
   * <code>IRON_GOLEM = 51;</code>
   */
  IRON_GOLEM(51),
  /**
   * <code>ITEM_FRAME = 52;</code>
   */
  ITEM_FRAME(52),
  /**
   * <code>LEASH_HITCH = 53;</code>
   */
  LEASH_HITCH(53),
  /**
   * <code>LIGHTNING = 54;</code>
   */
  LIGHTNING(54),
  /**
   * <code>LLAMA = 55;</code>
   */
  LLAMA(55),
  /**
   * <code>LLAMA_SPUT = 56;</code>
   */
  LLAMA_SPUT(56),
  /**
   * <code>MAGMA_CUBE = 57;</code>
   */
  MAGMA_CUBE(57),
  /**
   * <code>MARKER = 58;</code>
   */
  MARKER(58),
  /**
   * <code>MINECART = 59;</code>
   */
  MINECART(59),
  /**
   * <code>MINECART_CHEST = 60;</code>
   */
  MINECART_CHEST(60),
  /**
   * <code>MINECRAFT_COMMAND = 61;</code>
   */
  MINECRAFT_COMMAND(61),
  /**
   * <code>MINECRAFT_FURNACE = 62;</code>
   */
  MINECRAFT_FURNACE(62),
  /**
   * <code>MINECART_HOPPER = 63;</code>
   */
  MINECART_HOPPER(63),
  /**
   * <code>MINECART_MOB_SPAWNER = 64;</code>
   */
  MINECART_MOB_SPAWNER(64),
  /**
   * <code>MINECART_TNT = 65;</code>
   */
  MINECART_TNT(65),
  /**
   * <code>MULE = 66;</code>
   */
  MULE(66),
  /**
   * <code>MUSHROOM_COW = 67;</code>
   */
  MUSHROOM_COW(67),
  /**
   * <code>OCELOT = 68;</code>
   */
  OCELOT(68),
  /**
   * <code>PAINTING = 69;</code>
   */
  PAINTING(69),
  /**
   * <code>PANDA = 70;</code>
   */
  PANDA(70),
  /**
   * <code>PARROT = 71;</code>
   */
  PARROT(71),
  /**
   * <code>PHANTOM = 72;</code>
   */
  PHANTOM(72),
  /**
   * <code>PIG = 73;</code>
   */
  PIG(73),
  /**
   * <code>PIGLIN = 74;</code>
   */
  PIGLIN(74),
  /**
   * <code>PIGLIN_BRUTE = 75;</code>
   */
  PIGLIN_BRUTE(75),
  /**
   * <code>PILLAGER = 76;</code>
   */
  PILLAGER(76),
  /**
   * <code>PLAYER = 77;</code>
   */
  PLAYER(77),
  /**
   * <code>POLAR_BEAR = 78;</code>
   */
  POLAR_BEAR(78),
  /**
   * <code>PRIMED_TNT = 79;</code>
   */
  PRIMED_TNT(79),
  /**
   * <code>PUFFERFISH = 80;</code>
   */
  PUFFERFISH(80),
  /**
   * <code>RABBIT = 81;</code>
   */
  RABBIT(81),
  /**
   * <code>RAVAGER = 82;</code>
   */
  RAVAGER(82),
  /**
   * <code>SALMON = 83;</code>
   */
  SALMON(83),
  /**
   * <code>SHEEP = 84;</code>
   */
  SHEEP(84),
  /**
   * <code>SHULKER = 85;</code>
   */
  SHULKER(85),
  /**
   * <code>SHULKER_BULLET = 86;</code>
   */
  SHULKER_BULLET(86),
  /**
   * <code>SLIVERFISH = 87;</code>
   */
  SLIVERFISH(87),
  /**
   * <code>SKELETON = 88;</code>
   */
  SKELETON(88),
  /**
   * <code>SKELETON_HORSE = 89;</code>
   */
  SKELETON_HORSE(89),
  /**
   * <code>SLIME = 90;</code>
   */
  SLIME(90),
  /**
   * <code>SMALL_FIREBALL = 91;</code>
   */
  SMALL_FIREBALL(91),
  /**
   * <code>SNIFFER = 92;</code>
   */
  SNIFFER(92),
  /**
   * <code>SNOWBALL = 93;</code>
   */
  SNOWBALL(93),
  /**
   * <code>SNOWMAN = 94;</code>
   */
  SNOWMAN(94),
  /**
   * <code>SPECTRAL_ARROW = 95;</code>
   */
  SPECTRAL_ARROW(95),
  /**
   * <code>SPIDER = 96;</code>
   */
  SPIDER(96),
  /**
   * <code>SPLASH_POTION = 97;</code>
   */
  SPLASH_POTION(97),
  /**
   * <code>SQUID = 98;</code>
   */
  SQUID(98),
  /**
   * <code>STRAY = 99;</code>
   */
  STRAY(99),
  /**
   * <code>STRIDER = 100;</code>
   */
  STRIDER(100),
  /**
   * <code>TADPOLE = 101;</code>
   */
  TADPOLE(101),
  /**
   * <code>TEXT_DISPLAY = 102;</code>
   */
  TEXT_DISPLAY(102),
  /**
   * <code>THROWN_EXP_BOTTLE = 103;</code>
   */
  THROWN_EXP_BOTTLE(103),
  /**
   * <code>TRADER_LLAMA = 104;</code>
   */
  TRADER_LLAMA(104),
  /**
   * <code>TRIDENT = 105;</code>
   */
  TRIDENT(105),
  /**
   * <code>TROPICAL_FISH = 106;</code>
   */
  TROPICAL_FISH(106),
  /**
   * <code>TURTLE = 107;</code>
   */
  TURTLE(107),
  /**
   * <code>UNKNOWN = 108;</code>
   */
  UNKNOWN(108),
  /**
   * <code>VEX = 109;</code>
   */
  VEX(109),
  /**
   * <code>VILLAGER = 110;</code>
   */
  VILLAGER(110),
  /**
   * <code>VINDICATOR = 111;</code>
   */
  VINDICATOR(111),
  /**
   * <code>WANDERING_TRADER = 112;</code>
   */
  WANDERING_TRADER(112),
  /**
   * <code>WARDEN = 113;</code>
   */
  WARDEN(113),
  /**
   * <code>WITCH = 114;</code>
   */
  WITCH(114),
  /**
   * <code>WITHER = 115;</code>
   */
  WITHER(115),
  /**
   * <code>WITHER_SKELETON = 116;</code>
   */
  WITHER_SKELETON(116),
  /**
   * <code>WITHER_SKULL = 117;</code>
   */
  WITHER_SKULL(117),
  /**
   * <code>WOLF = 118;</code>
   */
  WOLF(118),
  /**
   * <code>ZOGLIN = 119;</code>
   */
  ZOGLIN(119),
  /**
   * <code>ZOMBIE = 120;</code>
   */
  ZOMBIE(120),
  /**
   * <code>ZOMBIE_HORSE = 121;</code>
   */
  ZOMBIE_HORSE(121),
  /**
   * <code>ZOMBIE_VILLAGER = 122;</code>
   */
  ZOMBIE_VILLAGER(122),
  /**
   * <code>ZOMBIFIED_PIGLIN = 123;</code>
   */
  ZOMBIFIED_PIGLIN(123),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>ALLAY = 0;</code>
   */
  public static final int ALLAY_VALUE = 0;
  /**
   * <code>AREA_EFFECT_CLOUD = 1;</code>
   */
  public static final int AREA_EFFECT_CLOUD_VALUE = 1;
  /**
   * <code>ARMOR_STAND = 2;</code>
   */
  public static final int ARMOR_STAND_VALUE = 2;
  /**
   * <code>ARROW = 3;</code>
   */
  public static final int ARROW_VALUE = 3;
  /**
   * <code>AXOLOTL = 4;</code>
   */
  public static final int AXOLOTL_VALUE = 4;
  /**
   * <code>BAT = 5;</code>
   */
  public static final int BAT_VALUE = 5;
  /**
   * <code>BEE = 6;</code>
   */
  public static final int BEE_VALUE = 6;
  /**
   * <code>BLAZE = 7;</code>
   */
  public static final int BLAZE_VALUE = 7;
  /**
   * <code>BLOCK_DISPLAY = 8;</code>
   */
  public static final int BLOCK_DISPLAY_VALUE = 8;
  /**
   * <code>BOAT = 9;</code>
   */
  public static final int BOAT_VALUE = 9;
  /**
   * <code>CAMEL = 10;</code>
   */
  public static final int CAMEL_VALUE = 10;
  /**
   * <code>CAT = 11;</code>
   */
  public static final int CAT_VALUE = 11;
  /**
   * <code>CAVE_SPIDER = 12;</code>
   */
  public static final int CAVE_SPIDER_VALUE = 12;
  /**
   * <code>CHEST_BOAT = 13;</code>
   */
  public static final int CHEST_BOAT_VALUE = 13;
  /**
   * <code>CHICKEN = 14;</code>
   */
  public static final int CHICKEN_VALUE = 14;
  /**
   * <code>COD = 15;</code>
   */
  public static final int COD_VALUE = 15;
  /**
   * <code>COW = 16;</code>
   */
  public static final int COW_VALUE = 16;
  /**
   * <code>CREEPER = 17;</code>
   */
  public static final int CREEPER_VALUE = 17;
  /**
   * <code>DOLPHIN = 18;</code>
   */
  public static final int DOLPHIN_VALUE = 18;
  /**
   * <code>DONKEY = 19;</code>
   */
  public static final int DONKEY_VALUE = 19;
  /**
   * <code>DRAGON_FIREBALL = 20;</code>
   */
  public static final int DRAGON_FIREBALL_VALUE = 20;
  /**
   * <code>DROPPED_ITEM = 21;</code>
   */
  public static final int DROPPED_ITEM_VALUE = 21;
  /**
   * <code>DROWNED = 22;</code>
   */
  public static final int DROWNED_VALUE = 22;
  /**
   * <code>EGG = 23;</code>
   */
  public static final int EGG_VALUE = 23;
  /**
   * <code>ELDER_GUARDIAN = 24;</code>
   */
  public static final int ELDER_GUARDIAN_VALUE = 24;
  /**
   * <code>ENDER_CRYSTAL = 25;</code>
   */
  public static final int ENDER_CRYSTAL_VALUE = 25;
  /**
   * <code>ENDER_DRAGON = 26;</code>
   */
  public static final int ENDER_DRAGON_VALUE = 26;
  /**
   * <code>ENDER_PEARL = 27;</code>
   */
  public static final int ENDER_PEARL_VALUE = 27;
  /**
   * <code>ENDER_SIGNAL = 28;</code>
   */
  public static final int ENDER_SIGNAL_VALUE = 28;
  /**
   * <code>ENDERMAN = 29;</code>
   */
  public static final int ENDERMAN_VALUE = 29;
  /**
   * <code>ENDERMITE = 30;</code>
   */
  public static final int ENDERMITE_VALUE = 30;
  /**
   * <code>EVOKER = 31;</code>
   */
  public static final int EVOKER_VALUE = 31;
  /**
   * <code>EVOKER_FANGS = 32;</code>
   */
  public static final int EVOKER_FANGS_VALUE = 32;
  /**
   * <code>EXPERIENCE_ORB = 33;</code>
   */
  public static final int EXPERIENCE_ORB_VALUE = 33;
  /**
   * <code>FALLING_BLOCK = 34;</code>
   */
  public static final int FALLING_BLOCK_VALUE = 34;
  /**
   * <code>FIREBALL = 35;</code>
   */
  public static final int FIREBALL_VALUE = 35;
  /**
   * <code>FIREWORK = 36;</code>
   */
  public static final int FIREWORK_VALUE = 36;
  /**
   * <code>FISHING_HOOK = 37;</code>
   */
  public static final int FISHING_HOOK_VALUE = 37;
  /**
   * <code>FOX = 38;</code>
   */
  public static final int FOX_VALUE = 38;
  /**
   * <code>FROG = 39;</code>
   */
  public static final int FROG_VALUE = 39;
  /**
   * <code>GHAST = 40;</code>
   */
  public static final int GHAST_VALUE = 40;
  /**
   * <code>GIANT = 41;</code>
   */
  public static final int GIANT_VALUE = 41;
  /**
   * <code>GLOW_ITEM_FRAME = 42;</code>
   */
  public static final int GLOW_ITEM_FRAME_VALUE = 42;
  /**
   * <code>GLOW_SQUID = 43;</code>
   */
  public static final int GLOW_SQUID_VALUE = 43;
  /**
   * <code>GOAT = 44;</code>
   */
  public static final int GOAT_VALUE = 44;
  /**
   * <code>GUARDIAN = 45;</code>
   */
  public static final int GUARDIAN_VALUE = 45;
  /**
   * <code>HOGLIN = 46;</code>
   */
  public static final int HOGLIN_VALUE = 46;
  /**
   * <code>HORSE = 47;</code>
   */
  public static final int HORSE_VALUE = 47;
  /**
   * <code>HUSK = 48;</code>
   */
  public static final int HUSK_VALUE = 48;
  /**
   * <code>ILLUSIONER = 49;</code>
   */
  public static final int ILLUSIONER_VALUE = 49;
  /**
   * <code>INTERACTION = 50;</code>
   */
  public static final int INTERACTION_VALUE = 50;
  /**
   * <code>IRON_GOLEM = 51;</code>
   */
  public static final int IRON_GOLEM_VALUE = 51;
  /**
   * <code>ITEM_FRAME = 52;</code>
   */
  public static final int ITEM_FRAME_VALUE = 52;
  /**
   * <code>LEASH_HITCH = 53;</code>
   */
  public static final int LEASH_HITCH_VALUE = 53;
  /**
   * <code>LIGHTNING = 54;</code>
   */
  public static final int LIGHTNING_VALUE = 54;
  /**
   * <code>LLAMA = 55;</code>
   */
  public static final int LLAMA_VALUE = 55;
  /**
   * <code>LLAMA_SPUT = 56;</code>
   */
  public static final int LLAMA_SPUT_VALUE = 56;
  /**
   * <code>MAGMA_CUBE = 57;</code>
   */
  public static final int MAGMA_CUBE_VALUE = 57;
  /**
   * <code>MARKER = 58;</code>
   */
  public static final int MARKER_VALUE = 58;
  /**
   * <code>MINECART = 59;</code>
   */
  public static final int MINECART_VALUE = 59;
  /**
   * <code>MINECART_CHEST = 60;</code>
   */
  public static final int MINECART_CHEST_VALUE = 60;
  /**
   * <code>MINECRAFT_COMMAND = 61;</code>
   */
  public static final int MINECRAFT_COMMAND_VALUE = 61;
  /**
   * <code>MINECRAFT_FURNACE = 62;</code>
   */
  public static final int MINECRAFT_FURNACE_VALUE = 62;
  /**
   * <code>MINECART_HOPPER = 63;</code>
   */
  public static final int MINECART_HOPPER_VALUE = 63;
  /**
   * <code>MINECART_MOB_SPAWNER = 64;</code>
   */
  public static final int MINECART_MOB_SPAWNER_VALUE = 64;
  /**
   * <code>MINECART_TNT = 65;</code>
   */
  public static final int MINECART_TNT_VALUE = 65;
  /**
   * <code>MULE = 66;</code>
   */
  public static final int MULE_VALUE = 66;
  /**
   * <code>MUSHROOM_COW = 67;</code>
   */
  public static final int MUSHROOM_COW_VALUE = 67;
  /**
   * <code>OCELOT = 68;</code>
   */
  public static final int OCELOT_VALUE = 68;
  /**
   * <code>PAINTING = 69;</code>
   */
  public static final int PAINTING_VALUE = 69;
  /**
   * <code>PANDA = 70;</code>
   */
  public static final int PANDA_VALUE = 70;
  /**
   * <code>PARROT = 71;</code>
   */
  public static final int PARROT_VALUE = 71;
  /**
   * <code>PHANTOM = 72;</code>
   */
  public static final int PHANTOM_VALUE = 72;
  /**
   * <code>PIG = 73;</code>
   */
  public static final int PIG_VALUE = 73;
  /**
   * <code>PIGLIN = 74;</code>
   */
  public static final int PIGLIN_VALUE = 74;
  /**
   * <code>PIGLIN_BRUTE = 75;</code>
   */
  public static final int PIGLIN_BRUTE_VALUE = 75;
  /**
   * <code>PILLAGER = 76;</code>
   */
  public static final int PILLAGER_VALUE = 76;
  /**
   * <code>PLAYER = 77;</code>
   */
  public static final int PLAYER_VALUE = 77;
  /**
   * <code>POLAR_BEAR = 78;</code>
   */
  public static final int POLAR_BEAR_VALUE = 78;
  /**
   * <code>PRIMED_TNT = 79;</code>
   */
  public static final int PRIMED_TNT_VALUE = 79;
  /**
   * <code>PUFFERFISH = 80;</code>
   */
  public static final int PUFFERFISH_VALUE = 80;
  /**
   * <code>RABBIT = 81;</code>
   */
  public static final int RABBIT_VALUE = 81;
  /**
   * <code>RAVAGER = 82;</code>
   */
  public static final int RAVAGER_VALUE = 82;
  /**
   * <code>SALMON = 83;</code>
   */
  public static final int SALMON_VALUE = 83;
  /**
   * <code>SHEEP = 84;</code>
   */
  public static final int SHEEP_VALUE = 84;
  /**
   * <code>SHULKER = 85;</code>
   */
  public static final int SHULKER_VALUE = 85;
  /**
   * <code>SHULKER_BULLET = 86;</code>
   */
  public static final int SHULKER_BULLET_VALUE = 86;
  /**
   * <code>SLIVERFISH = 87;</code>
   */
  public static final int SLIVERFISH_VALUE = 87;
  /**
   * <code>SKELETON = 88;</code>
   */
  public static final int SKELETON_VALUE = 88;
  /**
   * <code>SKELETON_HORSE = 89;</code>
   */
  public static final int SKELETON_HORSE_VALUE = 89;
  /**
   * <code>SLIME = 90;</code>
   */
  public static final int SLIME_VALUE = 90;
  /**
   * <code>SMALL_FIREBALL = 91;</code>
   */
  public static final int SMALL_FIREBALL_VALUE = 91;
  /**
   * <code>SNIFFER = 92;</code>
   */
  public static final int SNIFFER_VALUE = 92;
  /**
   * <code>SNOWBALL = 93;</code>
   */
  public static final int SNOWBALL_VALUE = 93;
  /**
   * <code>SNOWMAN = 94;</code>
   */
  public static final int SNOWMAN_VALUE = 94;
  /**
   * <code>SPECTRAL_ARROW = 95;</code>
   */
  public static final int SPECTRAL_ARROW_VALUE = 95;
  /**
   * <code>SPIDER = 96;</code>
   */
  public static final int SPIDER_VALUE = 96;
  /**
   * <code>SPLASH_POTION = 97;</code>
   */
  public static final int SPLASH_POTION_VALUE = 97;
  /**
   * <code>SQUID = 98;</code>
   */
  public static final int SQUID_VALUE = 98;
  /**
   * <code>STRAY = 99;</code>
   */
  public static final int STRAY_VALUE = 99;
  /**
   * <code>STRIDER = 100;</code>
   */
  public static final int STRIDER_VALUE = 100;
  /**
   * <code>TADPOLE = 101;</code>
   */
  public static final int TADPOLE_VALUE = 101;
  /**
   * <code>TEXT_DISPLAY = 102;</code>
   */
  public static final int TEXT_DISPLAY_VALUE = 102;
  /**
   * <code>THROWN_EXP_BOTTLE = 103;</code>
   */
  public static final int THROWN_EXP_BOTTLE_VALUE = 103;
  /**
   * <code>TRADER_LLAMA = 104;</code>
   */
  public static final int TRADER_LLAMA_VALUE = 104;
  /**
   * <code>TRIDENT = 105;</code>
   */
  public static final int TRIDENT_VALUE = 105;
  /**
   * <code>TROPICAL_FISH = 106;</code>
   */
  public static final int TROPICAL_FISH_VALUE = 106;
  /**
   * <code>TURTLE = 107;</code>
   */
  public static final int TURTLE_VALUE = 107;
  /**
   * <code>UNKNOWN = 108;</code>
   */
  public static final int UNKNOWN_VALUE = 108;
  /**
   * <code>VEX = 109;</code>
   */
  public static final int VEX_VALUE = 109;
  /**
   * <code>VILLAGER = 110;</code>
   */
  public static final int VILLAGER_VALUE = 110;
  /**
   * <code>VINDICATOR = 111;</code>
   */
  public static final int VINDICATOR_VALUE = 111;
  /**
   * <code>WANDERING_TRADER = 112;</code>
   */
  public static final int WANDERING_TRADER_VALUE = 112;
  /**
   * <code>WARDEN = 113;</code>
   */
  public static final int WARDEN_VALUE = 113;
  /**
   * <code>WITCH = 114;</code>
   */
  public static final int WITCH_VALUE = 114;
  /**
   * <code>WITHER = 115;</code>
   */
  public static final int WITHER_VALUE = 115;
  /**
   * <code>WITHER_SKELETON = 116;</code>
   */
  public static final int WITHER_SKELETON_VALUE = 116;
  /**
   * <code>WITHER_SKULL = 117;</code>
   */
  public static final int WITHER_SKULL_VALUE = 117;
  /**
   * <code>WOLF = 118;</code>
   */
  public static final int WOLF_VALUE = 118;
  /**
   * <code>ZOGLIN = 119;</code>
   */
  public static final int ZOGLIN_VALUE = 119;
  /**
   * <code>ZOMBIE = 120;</code>
   */
  public static final int ZOMBIE_VALUE = 120;
  /**
   * <code>ZOMBIE_HORSE = 121;</code>
   */
  public static final int ZOMBIE_HORSE_VALUE = 121;
  /**
   * <code>ZOMBIE_VILLAGER = 122;</code>
   */
  public static final int ZOMBIE_VILLAGER_VALUE = 122;
  /**
   * <code>ZOMBIFIED_PIGLIN = 123;</code>
   */
  public static final int ZOMBIFIED_PIGLIN_VALUE = 123;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static EntityType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static EntityType forNumber(int value) {
    switch (value) {
      case 0: return ALLAY;
      case 1: return AREA_EFFECT_CLOUD;
      case 2: return ARMOR_STAND;
      case 3: return ARROW;
      case 4: return AXOLOTL;
      case 5: return BAT;
      case 6: return BEE;
      case 7: return BLAZE;
      case 8: return BLOCK_DISPLAY;
      case 9: return BOAT;
      case 10: return CAMEL;
      case 11: return CAT;
      case 12: return CAVE_SPIDER;
      case 13: return CHEST_BOAT;
      case 14: return CHICKEN;
      case 15: return COD;
      case 16: return COW;
      case 17: return CREEPER;
      case 18: return DOLPHIN;
      case 19: return DONKEY;
      case 20: return DRAGON_FIREBALL;
      case 21: return DROPPED_ITEM;
      case 22: return DROWNED;
      case 23: return EGG;
      case 24: return ELDER_GUARDIAN;
      case 25: return ENDER_CRYSTAL;
      case 26: return ENDER_DRAGON;
      case 27: return ENDER_PEARL;
      case 28: return ENDER_SIGNAL;
      case 29: return ENDERMAN;
      case 30: return ENDERMITE;
      case 31: return EVOKER;
      case 32: return EVOKER_FANGS;
      case 33: return EXPERIENCE_ORB;
      case 34: return FALLING_BLOCK;
      case 35: return FIREBALL;
      case 36: return FIREWORK;
      case 37: return FISHING_HOOK;
      case 38: return FOX;
      case 39: return FROG;
      case 40: return GHAST;
      case 41: return GIANT;
      case 42: return GLOW_ITEM_FRAME;
      case 43: return GLOW_SQUID;
      case 44: return GOAT;
      case 45: return GUARDIAN;
      case 46: return HOGLIN;
      case 47: return HORSE;
      case 48: return HUSK;
      case 49: return ILLUSIONER;
      case 50: return INTERACTION;
      case 51: return IRON_GOLEM;
      case 52: return ITEM_FRAME;
      case 53: return LEASH_HITCH;
      case 54: return LIGHTNING;
      case 55: return LLAMA;
      case 56: return LLAMA_SPUT;
      case 57: return MAGMA_CUBE;
      case 58: return MARKER;
      case 59: return MINECART;
      case 60: return MINECART_CHEST;
      case 61: return MINECRAFT_COMMAND;
      case 62: return MINECRAFT_FURNACE;
      case 63: return MINECART_HOPPER;
      case 64: return MINECART_MOB_SPAWNER;
      case 65: return MINECART_TNT;
      case 66: return MULE;
      case 67: return MUSHROOM_COW;
      case 68: return OCELOT;
      case 69: return PAINTING;
      case 70: return PANDA;
      case 71: return PARROT;
      case 72: return PHANTOM;
      case 73: return PIG;
      case 74: return PIGLIN;
      case 75: return PIGLIN_BRUTE;
      case 76: return PILLAGER;
      case 77: return PLAYER;
      case 78: return POLAR_BEAR;
      case 79: return PRIMED_TNT;
      case 80: return PUFFERFISH;
      case 81: return RABBIT;
      case 82: return RAVAGER;
      case 83: return SALMON;
      case 84: return SHEEP;
      case 85: return SHULKER;
      case 86: return SHULKER_BULLET;
      case 87: return SLIVERFISH;
      case 88: return SKELETON;
      case 89: return SKELETON_HORSE;
      case 90: return SLIME;
      case 91: return SMALL_FIREBALL;
      case 92: return SNIFFER;
      case 93: return SNOWBALL;
      case 94: return SNOWMAN;
      case 95: return SPECTRAL_ARROW;
      case 96: return SPIDER;
      case 97: return SPLASH_POTION;
      case 98: return SQUID;
      case 99: return STRAY;
      case 100: return STRIDER;
      case 101: return TADPOLE;
      case 102: return TEXT_DISPLAY;
      case 103: return THROWN_EXP_BOTTLE;
      case 104: return TRADER_LLAMA;
      case 105: return TRIDENT;
      case 106: return TROPICAL_FISH;
      case 107: return TURTLE;
      case 108: return UNKNOWN;
      case 109: return VEX;
      case 110: return VILLAGER;
      case 111: return VINDICATOR;
      case 112: return WANDERING_TRADER;
      case 113: return WARDEN;
      case 114: return WITCH;
      case 115: return WITHER;
      case 116: return WITHER_SKELETON;
      case 117: return WITHER_SKULL;
      case 118: return WOLF;
      case 119: return ZOGLIN;
      case 120: return ZOMBIE;
      case 121: return ZOMBIE_HORSE;
      case 122: return ZOMBIE_VILLAGER;
      case 123: return ZOMBIFIED_PIGLIN;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<EntityType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      EntityType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<EntityType>() {
          public EntityType findValueByNumber(int number) {
            return EntityType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return io.github.projecthsi.mobarena.protobuf.MCOuter.getDescriptor().getEnumTypes().get(0);
  }

  private static final EntityType[] VALUES = values();

  public static EntityType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private EntityType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:mob_arena.EntityType)
}

